name: Publish to npm

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Lint code
      run: npm run lint || echo "Linting warnings detected"
      
    - name: Build project
      run: npm run build
      
    - name: Run tests
      run: npm test || echo "Tests not available or failed"
      
    - name: Extract version info
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        if [[ $VERSION == *"alpha"* ]]; then
          echo "tag=alpha" >> $GITHUB_OUTPUT
        elif [[ $VERSION == *"beta"* ]]; then
          echo "tag=beta" >> $GITHUB_OUTPUT
        elif [[ $VERSION == *"rc"* ]]; then
          echo "tag=rc" >> $GITHUB_OUTPUT
        else
          echo "tag=latest" >> $GITHUB_OUTPUT
        fi
        
    - name: Publish to npm (latest)
      if: steps.version.outputs.tag == 'latest'
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Publish to npm (prerelease)
      if: steps.version.outputs.tag != 'latest'
      run: npm publish --tag ${{ steps.version.outputs.tag }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create GitHub Release
      if: steps.version.outputs.tag == 'latest'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.version.outputs.version }}
        draft: false
        prerelease: false
        body: |
          ## Changes in ${{ steps.version.outputs.version }}
          
          Auto-generated release for version ${{ steps.version.outputs.version }}.
          
          ### Installation
          ```bash
          npm install unpak.js@${{ steps.version.outputs.version }}
          ```
          
          See [CHANGELOG.md](./docs/CHANGELOG.md) for detailed changes.